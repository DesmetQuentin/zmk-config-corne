/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    /* ==========================================================
     *  Custom combo + macro: Lower + Tab -> Alt+Tab (task switch)
     *  ----------------------------------------------------------
     *  NOTE: Replace the <row col> pairs in `key-positions` with
     *  the actual matrix positions for your Tab and Lower keys.
     *  Example shown assumes:
     *      - Tab  : matrix position <0 0>
     *      - Lower: matrix position <3 1>
     *  Get the correct numbers from your `kscan` matrix in the
     *  board overlay and adjust if necessary.
     * ========================================================== */

    combos {
        compatible = "zmk,combos";

        euro {
            bindings = <&euro_v1>;
            key-positions = <28 29 37>;
            layers = <0>;
            timeout-ms = <300>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <37 41>;
            layers = <0>;
            timeout-ms = <300>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <37 29>;
            layers = <0>;
            timeout-ms = <300>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <37 12>;
            timeout-ms = <300>;
            layers = <0>;
        };

        excl {
            bindings = <&kp EXCL>;
            key-positions = <37 35>;
            timeout-ms = <300>;
            layers = <0>;
        };

        prcnt {
            bindings = <&kp PRCNT>;
            key-positions = <37 17>;
            timeout-ms = <300>;
            layers = <0>;
        };

        amps {
            bindings = <&kp AMPS>;
            key-positions = <37 18>;
            timeout-ms = <300>;
            layers = <0>;
        };

        toggle_bt {
            bindings = <&tog 4>;
            key-positions = <38 39>;
            layers = <0>;
        };

        toggle_func {
            bindings = <&tog 3>;
            key-positions = <37 40>;
            layers = <0>;
        };

        toggle_num {
            bindings = <&tog 2>;
            key-positions = <36 41>;
            layers = <0>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        elipsis {
            bindings = <&elipsis>;
            key-positions = <18 19 20>;
            layers = <0>;
        };
    };

    macros {
        euro_v1: euro_v1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp U>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp KP_N2 &kp KP_N0 &kp A &kp C &kp SPACE>;

            label = "EURO_V1";
        };

        elipsis: elipsis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp DOT &kp DOT &kp DOT>;

            label = "ELIPSIS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_engram {
            /* -------------------------------------------------------------
             * |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  ;  | BSPC |
             * | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  P  |  '   |
             * | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
             *                    | ESC | LWR | SPC |   | ENT | RSE  | BSPC |
             * ------------------------------------------------------------- */

            bindings = <
&kp TAB    &kp B  &kp Y  &kp O     &kp U       &kp SQT      &kp BSPC  &kp L      &kp D      &kp W  &kp V  &kp Z
&kp ASTRK  &kp C  &kp I  &kp E     &kp A       &kp COMMA    &kp DOT   &kp H      &kp T      &kp S  &kp N  &kp Q
&kp LCTRL  &kp G  &kp X  &kp J     &kp K       &kp MINUS    &kp SEMI  &kp R      &kp M      &kp F  &kp P  &kp BSLH
                         &kp LALT  &kp LSHIFT  &mo 1        &kp RET   &kp SPACE  &kp UNDER
            >;
        };

        symbols {
            bindings = <
&kp GRAVE       &kp N1    &kp N2     &kp N3    &kp N4     &kp N5                  &kp DEL                &kp N6     &kp N7     &kp N8    &kp N9    &kp N0
&kp LEFT_BRACE  &kp BSLH  &kp PG_DN  &kp UP    &kp PG_UP  &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp PLUS   &kp CARET  &none     &kp FSLH  &kp RIGHT_BRACE
&trans          &kp LT    &kp LEFT   &kp DOWN  &kp RIGHT  &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp MINUS  &kp EQUAL  &kp PIPE  &kp GT    &kp TILDE
                                     &trans    &trans     &trans                  &none                  &none      &none
            >;
        };

        numerical_and_utils {
            bindings = <
&trans  &none          &none      &none     &kp PRINTSCREEN  &none           &trans     &kp N7  &kp N8  &kp N9  &kp EQUAL   &kp TILDE
&none   &kp C_BRI_INC  &kp PG_DN  &kp UP    &kp PG_UP        &kp C_VOL_UP    &kp FSLH   &kp N4  &kp N5  &kp N6  &kp PLUS    &kp MINUS
&trans  &kp C_BRI_DEC  &kp LEFT   &kp DOWN  &kp RIGHT        &kp C_VOL_DN    &kp ASTRK  &kp N1  &kp N2  &kp N3  &kp KP_DOT  &kp CARET
                                  &trans    &trans           &to 0           &trans     &trans  &kp N0
            >;
        };

        func {
            bindings = <
&none  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &none  &kp F6  &kp F7  &kp F8  &kp F9   &kp F10
&none  &none   &none   &none   &none   &none     &none  &none   &none   &none   &kp F11  &kp F12
&none  &none   &none   &none   &none   &none     &none  &none   &none   &none   &none    &none
                       &none   &none   &to 0     &none  &none   &none
            >;
        };

        bt {
            bindings = <
&none  &bt BT_CLR    &bt BT_CLR_ALL  &bt BT_NXT    &bt BT_PRV    &none           &trans  &trans  &trans  &trans  &trans  &trans
&none  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&none  &none         &none           &none         &none         &none           &trans  &trans  &trans  &trans  &trans  &trans
                                     &none         &none         &to 0           &trans  &trans  &trans
            >;
        };
    };
};
