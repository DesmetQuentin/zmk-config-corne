/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    /* ==========================================================
     *  Custom combo + macro: Lower + Tab -> Alt+Tab (task switch)
     *  ----------------------------------------------------------
     *  NOTE: Replace the <row col> pairs in `key-positions` with
     *  the actual matrix positions for your Tab and Lower keys.
     *  Example shown assumes:
     *      - Tab  : matrix position <0 0>
     *      - Lower: matrix position <3 2>
     *  Get the correct numbers from your `kscan` matrix in the
     *  board overlay and adjust if necessary.
     * ========================================================== */

    behaviors {
        /* Macro that presses Alt, taps Tab, then releases Alt */
        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            label = "ALT_TAB_MACRO";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp TAB>;
        };
    };

    combos {
        alt_tab_combo {
            timeout-ms = <40>;          /* 40â€¯ms window for combo detection */
            key-positions = <3 2 0 0>;  /* <Lower row col> <Tab row col>  */
            bindings = <&alt_tab>;      /* Runs the macro above           */
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* -------------------------------------------------------------
             * |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  ;  | BSPC |
             * | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  P  |  '   |
             * | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
             *                    | ESC | LWR | SPC |   | ENT | RSE  | BSPC |
             * ------------------------------------------------------------- */
            bindings = <
                &kp TAB   &kp Q &kp W &kp E &kp R &kp T       &kp Y &kp U  &kp I     &kp O   &kp SEMI &kp BSPC
                &kp LSHFT &kp A &kp S &kp D &kp F &kp G       &kp H &kp J  &kp K     &kp L   &kp P    &kp SQT
                &kp LCTRL &kp Z &kp X &kp C &kp V &kp B       &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RALT
                               &kp ESC &mo 1 &kp SPACE       &kp RET &mo 2 &kp BSPC
            >;
        };

        lower_layer {
            /* -------------------------------------------------------------
             * |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
             * | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
             * | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
             *                    | GUI |     | SPC |   | ENT |     | ALT |
             * ------------------------------------------------------------- */
            bindings = <
                &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
                &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                          &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
            >;
        };

        raise_layer {
            /* -------------------------------------------------------------
             * |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
             * | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
             * | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  |  "|" |  ~   |
             *                    | GUI |     | SPC |   | ENT |     | ALT |
             * ------------------------------------------------------------- */
            bindings = <
                &kp TAB   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
                &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
                &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                                &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
            >;
        };
    };
};
